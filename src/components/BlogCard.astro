---
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;
const { title, description, pubDate, author, tags, featured } = post.data;

const formattedDate = new Date(pubDate).toLocaleDateString("en-us", {
  year: "numeric",
  month: "short",
  day: "numeric",
});
---

<article
  class={`group relative overflow-hidden rounded-xl border border-border bg-card shadow-sm transition-all duration-300 hover:shadow-md ${
    featured ? "ring-1 ring-accent ring-offset-2" : ""
  }`}
>
  <div class="p-6">
    {
      featured && (
        <div class="absolute right-3 top-3">
          <span class="bg-accent/10 inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium text-accent">
            Featured
          </span>
        </div>
      )
    }

    <a href={`/posts/${post.slug}/`} class="block">
      <h2
        class="text-xl font-bold tracking-tight text-foreground transition-colors duration-300 group-hover:text-accent md:text-2xl"
      >
        {title}
      </h2>
    </a>

    <div class="text-foreground/70 mt-3 flex flex-wrap items-center gap-x-3 gap-y-1 text-sm">
      <time datetime={pubDate.toISOString()} class="flex items-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="mr-1 h-4 w-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
          ></path>
        </svg>
        {formattedDate}
      </time>
      <span class="text-foreground/50">â€¢</span>
      <span class="flex items-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="mr-1 h-4 w-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
        </svg>
        {author}
      </span>
    </div>

    <p class="text-foreground/80 mt-4 line-clamp-3">{description}</p>

    {
      tags && tags.length > 0 && (
        <div class="mt-5 flex flex-wrap gap-2">
          {tags.map((tag) => (
            <a
              href={`/tags/${tag}`}
              class="hover:bg-accent/20 inline-flex items-center rounded-full bg-muted px-2.5 py-0.5 text-xs font-medium transition-colors hover:text-accent"
            >
              #{tag}
            </a>
          ))}
        </div>
      )
    }

    <div class="border-border/50 mt-5 border-t pt-4">
      <a
        href={`/posts/${post.slug}/`}
        class="inline-flex items-center text-sm font-medium text-accent transition-all hover:translate-x-1"
      >
        Read more
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="ml-1 h-4 w-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
        </svg>
      </a>
    </div>
  </div>
</article>
